{"version":3,"sources":["components/HamBurgerMenu.jsx","components/ButtonA.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledMenu","withStyles","paper","border","width","height","backgroundColor","marginTop","marginLeft","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","color","palette","common","white","lineHeight","minHeight","MenuItem","StyledButton","background","borderRadius","marginRight","Button","StyledMenuIcon","fontSize","fontWeight","MenuIcon","HamBurgerMenu","React","useState","anchorEl","setAnchorEl","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","ListItemText","primary","ButtonA","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAQMA,EAAaC,YAAW,CAC5BC,MAAO,CACLC,OAAQ,oBACRC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,YACjBC,WAAY,GACZC,YAAa,IACb,4BAA6B,CAC3BJ,MAAO,IACPC,OAAQ,OAVKJ,EAahB,SAACQ,GAAD,OACD,cAACC,EAAA,EAAD,aACEC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVN,OAIFQ,EAAiBhB,aAAW,SAACiB,GAAD,MAAY,CAC5CC,KAAM,CACJ,UAAW,CACTb,gBAAiB,WACjB,sDAAuD,CACrDc,MAAOF,EAAMG,QAAQC,OAAOC,QAGhC,4BAA6B,CAC3BC,WAAY,GACZC,UAAW,QAVMxB,CAanByB,KAEEC,EAAe1B,aAAW,SAACiB,GAAD,MAAY,CAC1CC,KAAM,CACJS,WAAY,sDACZzB,OAAQ,EACR0B,aAAc,GACdT,MAAO,WACPb,UAAW,GACXuB,YAAa,GACb1B,MAAO,GACPC,OAAQ,GACR,4BAA6B,CAC3BD,MAAO,GACPC,OAAQ,QAZOJ,CAgBnB8B,KAEIC,EAAiB/B,aAAW,SAACiB,GAAD,MAAY,CAC5CC,KAAM,CACJc,SAAU,GACVC,WAAY,IACZ,4BAA6B,CAC3BD,SAAU,GACVC,WAAY,SANKjC,CAUrBkC,KAEa,SAASC,IAAiB,IAAD,EACNC,IAAMC,SAAS,MADT,mBAC/BC,EAD+B,KACrBC,EADqB,KAWtC,OACE,gCACE,cAACb,EAAD,UACA,cAACI,EAAA,EAAD,CACEU,QAZc,SAACC,GACnBF,EAAYE,EAAMC,gBAUhB,SAGE,cAACX,EAAD,UACA,cAAC,IAAD,UAIF,eAAChC,EAAD,CACE4C,GAAG,kBACHL,SAAUA,EACVM,aAAW,EACXC,KAAMC,QAAQR,GACdS,QApBc,WAClBR,EAAY,OAcV,UAOE,cAACvB,EAAD,UACE,cAACgC,EAAA,EAAD,CAAcC,QAAQ,WAExB,cAACjC,EAAD,UACE,cAACgC,EAAA,EAAD,CAAcC,QAAQ,eAExB,cAACjC,EAAD,UACE,cAACgC,EAAA,EAAD,CAAcC,QAAQ,sBCjHhC,IAAMvB,EAAe1B,aAAW,SAACiB,GAAD,MAAY,CAC1CC,KAAM,CACJS,WAAY,sDACZzB,OAAQ,EACR0B,aAAc,GACdT,MAAO,WACPb,UAAW,GACXH,MAAO,IACPC,OAAQ,GACRG,WAAY,OATKP,CAanB8B,KAEa,SAASoB,IAEtB,OACE,8BACE,cAAC,EAAD,UACA,cAACpB,EAAA,EAAD,UACE,+CCFOqB,MApBf,WACE,OACE,sBAAKC,UAAU,MAAf,UAEE,sBAAKA,UAAU,WAAf,UACA,6DACA,gTAKA,cAACF,EAAD,OAEA,qBAAKE,UAAU,WAAf,SACA,cAACjB,EAAD,UCNSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.565a1a8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n    width: 300,\r\n    height: 150,\r\n    backgroundColor: \"lightgrey\",\r\n    marginTop: -60,\r\n    marginLeft: -120,\r\n    '@media (max-width: 620px)': {\r\n      width: 180,\r\n      height: 100\r\n    }\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: \"darkgrey\",\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '@media (max-width: 620px)': {\r\n      lineHeight: 25,\r\n      minHeight: 30\r\n    }\r\n  },\r\n}))(MenuItem);\r\n\r\nconst StyledButton = withStyles((theme) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, darkgrey 30%, lightgrey 90%)',\r\n    border: 0,\r\n    borderRadius: 50,\r\n    color: \"darkgrey\",\r\n    marginTop: 20,\r\n    marginRight: 20,\r\n    width: 75,\r\n    height: 75,\r\n    '@media (max-width: 620px)': {\r\n      width: 55,\r\n      height: 55\r\n    }\r\n  },\r\n})\r\n)(Button);\r\n\r\nconst StyledMenuIcon = withStyles((theme) => ({\r\n  root: {\r\n    fontSize: 48, \r\n    fontWeight: 500,\r\n    '@media (max-width: 620px)': {\r\n      fontSize: 38, \r\n      fontWeight: 500,\r\n      }\r\n  },\r\n})\r\n)(MenuIcon);\r\n\r\nexport default function HamBurgerMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledButton>\r\n      <Button\r\n        onClick={handleClick}\r\n      >\r\n        <StyledMenuIcon>\r\n        <MenuIcon />\r\n        </StyledMenuIcon>\r\n      </Button>\r\n      </StyledButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <ListItemText primary=\"Jobs\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemText primary=\"Projects\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemText primary=\"Workshops\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst StyledButton = withStyles((theme) => ({\r\n  root: {\r\n    background: 'linear-gradient(45deg, darkgrey 30%, lightgrey 90%)',\r\n    border: 0,\r\n    borderRadius: 50,\r\n    color: \"darkgrey\",\r\n    marginTop: 25,\r\n    width: 185,\r\n    height: 55,\r\n    marginLeft: 20,\r\n  \r\n  },\r\n})\r\n)(Button);\r\n\r\nexport default function ButtonA() {\r\n\r\n  return (\r\n    <div>\r\n      <StyledButton>\r\n      <Button>\r\n        <span>Apply</span>\r\n      </Button>\r\n      </StyledButton>\r\n      </div>\r\n      )\r\n      }","import './App.css';\nimport HamBurgerMenu from './components/HamBurgerMenu';\nimport ButtonA from './components/ButtonA'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <div className=\"section2\">\n      <h1>Find Your Dream Job with Us</h1>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n        sed diam nonummy nibh euismod tincidunt ut laoreet dolore\n        magna aliquam erat volutpat. Ut wisi enim ad minim veniam, \n        quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n      </p>\n      <ButtonA/>\n      </div>\n      <div className=\"section1\">\n      <HamBurgerMenu />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}